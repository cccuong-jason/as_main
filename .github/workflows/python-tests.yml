name: Python Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  lint-and-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.7.1
        virtualenvs-create: false
    
    - name: Debug Poetry Configuration
      run: |
        echo "Current Poetry version:"
        poetry --version
        echo "Current Poetry configuration:"
        poetry config --list
        echo "Setting virtualenvs.in-project to true..."
        poetry config virtualenvs.in-project true
        echo "Updated Poetry configuration:"
        poetry config --list
    
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
    
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: |
        poetry install --no-interaction --no-root --verbose
    
    - name: Lint with Ruff
      run: |
        poetry run ruff check .
        poetry run ruff format --check .
    
    - name: Run static type checking
      run: |
        poetry run mypy tshirt_fulfillment/
    
    - name: Build package
      run: |
        poetry build
    
    - name: Archive build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/

  test:
    needs: lint-and-build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.7.1
        virtualenvs-create: false
    
    - name: Debug Poetry Configuration
      run: |
        echo "Current Poetry version:"
        poetry --version
        echo "Current Poetry configuration:"
        poetry config --list
        echo "Setting virtualenvs.in-project to true..."
        poetry config virtualenvs.in-project true
        echo "Updated Poetry configuration:"
        poetry config --list
    
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
    
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: |
        poetry install --no-interaction --no-root --verbose
    
    - name: Run unit tests
      run: |
        poetry run pytest tshirt_fulfillment/tests/unit/ --cov=tshirt_fulfillment
    
    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-${{ matrix.python-version }}
        path: .coverage